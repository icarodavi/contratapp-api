// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum DisputaStatus {
  AGUARDANDO
  ABERTA
  SUSPENSA
  ENCERRADA
}

enum TipoEmpresa {
  ME
  EPP
  OUTRA
}

enum TipoDocumento {
  // Documentos de Licitação
  PROPOSTA
  HABILITACAO
  CERTIDAO
  DECLARACAO
  COMPROVANTE
  EDITAL
  ATA
  CONTRATO
  ANEXO
  ADITIVO
  TERMO_ADITIVO
  TERMO_HOMOLOGACAO
  TERMO_JULGAMENTO
  TERMO_RESCISAO
  TERMO_ACEITACAO
  TERMO_ENCERRAMENTO

  // Documentos de Proposta
  PROPOSTA_TECNICA
  PROPOSTA_COMERCIAL
  PROPOSTA_FINANCEIRA
  PLANILHA_PRECOS
  MEMORIAL_DESCRITIVO
  CRONOGRAMA_EXECUCAO

  // Documentos de Habilitação
  HABILITACAO_JURIDICA
  HABILITACAO_TECNICA
  HABILITACAO_FISCAL
  HABILITACAO_ECONOMICA
  HABILITACAO_QUALIFICACAO

  // Certidões
  CERTIDAO_NEGATIVA_DEBITOS
  CERTIDAO_POSITIVA_COM_EFEITO_NEGATIVA
  CERTIDAO_TRABALHISTA
  CERTIDAO_FGTS
  CERTIDAO_INSS
  CERTIDAO_FALENCIA
  CERTIDAO_CRIMINAL
  CERTIDAO_ELEITORAL
  CERTIDAO_MILITAR
  CERTIDAO_ESTADUAL
  CERTIDAO_MUNICIPAL
  CERTIDAO_FEDERAL

  // Declarações
  DECLARACAO_DE_NAO_INCUMBENCIA
  DECLARACAO_DE_VERACIDADE
  DECLARACAO_DE_COMPATIBILIDADE
  DECLARACAO_DE_ATENDIMENTO
  DECLARACAO_DE_CAPACIDADE
  DECLARACAO_DE_EXPERIENCIA
  DECLARACAO_DE_QUALIFICACAO
  DECLARACAO_DE_ME_EPP

  // Comprovantes
  COMPROVANTE_ENDERECO
  COMPROVANTE_INSCRICAO
  COMPROVANTE_CAPITAL
  COMPROVANTE_EXPERIENCIA
  COMPROVANTE_QUALIFICACAO
  COMPROVANTE_PAGAMENTO
  COMPROVANTE_ENTREGA
  COMPROVANTE_ASSINATURA

  // Outros Documentos
  MANUAL_TECNICO
  ESPECIFICACAO_TECNICA
  DESENHO_TECNICO
  FOTO
  VIDEO
  AUDIO
  OUTROS
}

enum PerfilUsuario {
  ADMIN
  PREGOEIRO
  LICITANTE
  VISUALIZADOR
}

enum TipoAutorChat {
  PREGOEIRO
  LICITANTE
}

enum StatusProposta {
  PENDENTE
  ACEITA
  REJEITADA
  CANCELADA
}

enum TipoAutorMensagem {
  PREGOEIRO
  LICITANTE
}

enum StatusDocumento {
  PENDENTE
  VALIDADO
  INVALIDO
  EXPIRADO
}

enum ModalidadeLicitação {
  PREGÃO_ELETRÔNICO
  CONCORRÊNCIA
  CONCURSO
  LEILÃO
  DISPENSA
  INEXIGIBILIDADE
}

enum CritérioJulgamento {
  MENOR_PRECO
  MAIOR_DESCONTO
  TÉCNICA_E_PRECO
  MAIOR_LANCE_OU_OFERTA
  MELHOR_TÉCNICA
  MAIOR_RETORNO_ECONÔMICO
}

enum TipoRecurso {
  IMPUGNACAO
  RECURSO
  RECONSIDERACAO
}

enum StatusRecurso {
  PENDENTE
  DEFERIDO
  INDEFERIDO
  ARQUIVADO
}

enum TipoSancao {
  ADVERTENCIA
  SUSPENSAO
  IMPEDIMENTO
  DECLARACAO_INIDONEIDADE
  MULTA
}

enum StatusSancao {
  PENDENTE
  EM_VIGOR
  SUSPENSA
  REVOGADA
  EXPIRADA
}

enum TipoPrazo {
  ENTREGA_DOCUMENTOS
  ENTREGA_PROPOSTA
  RECURSO
  RECONSIDERACAO
  IMPUGNACAO
  HOMOLOGACAO
  CONTRATACAO
  EXECUCAO
  PAGAMENTO
  OUTROS
}

enum StatusPrazo {
  PENDENTE
  EM_ANDAMENTO
  CONCLUIDO
  ATRASADO
  CANCELADO
}

enum TipoAtividade {
  // Ações de Disputa
  DISPUTA_ABERTA
  DISPUTA_SUSPENSA
  DISPUTA_RETOMADA
  DISPUTA_ENCERRADA
  DISPUTA_CANCELADA

  // Ações de Documentos
  DOCUMENTO_ENVIADO
  DOCUMENTO_VALIDADO
  DOCUMENTO_INVALIDADO
  DOCUMENTO_EXCLUIDO
  DOCUMENTO_ATUALIZADO

  // Ações de Lances
  LANCE_REALIZADO
  LANCE_CANCELADO
  LANCE_INVALIDADO

  // Ações de Propostas
  PROPOSTA_ENVIADA
  PROPOSTA_ATUALIZADA
  PROPOSTA_CANCELADA
  PROPOSTA_ACEITA
  PROPOSTA_REJEITADA

  // Ações de Recursos
  RECURSO_ENVIADO
  RECURSO_RESPONDIDO
  RECURSO_DEFERIDO
  RECURSO_INDEFERIDO

  // Ações de Sanções
  SANCAO_APLICADA
  SANCAO_REVOGADA
  SANCAO_SUSPENSA
  SANCAO_EXPIRADA

  // Ações de Prazos
  PRAZO_CRIADO
  PRAZO_ATUALIZADO
  PRAZO_CONCLUIDO
  PRAZO_ATRASADO
  PRAZO_CANCELADO

  // Ações de Chat
  MENSAGEM_ENVIADA
  MENSAGEM_EDITADA
  MENSAGEM_EXCLUIDA

  // Ações de Usuários
  USUARIO_LOGIN
  USUARIO_LOGOUT
  USUARIO_BLOQUEADO
  USUARIO_DESBLOQUEADO
  SENHA_ALTERADA
  PERFIL_ATUALIZADO

  // Ações de Sistema
  SISTEMA_BACKUP
  SISTEMA_RESTAURACAO
  SISTEMA_ATUALIZACAO
  SISTEMA_MANUTENCAO
  SISTEMA_ERRO
}

model Usuario {
  id                  String         @id @default(uuid())
  nome                String
  email               String         @unique
  senha               String
  perfil              PerfilUsuario
  ativo               Boolean        @default(true)
  ultimoAcesso        DateTime?
  refreshToken        String?
  LogAtividade        LogAtividade[]
  MensagemChat        MensagemChat[]
  licitante           Licitante?     @relation(fields: [licitanteId], references: [id])
  licitanteId         String?        @unique
  recursosEnviados    Recurso[]      @relation("RecursoEnviadoPor")
  recursosRespondidos Recurso[]      @relation("RecursoRespondidoPor")
  sancaoAplicada      Sancao[]       @relation("SancaoAplicadaPor")
  sancaoRevogada      Sancao[]       @relation("SancaoRevogadaPor")
  prazosCriados       Prazo[]        @relation("PrazoCriadoPor")
  prazosConcluidos    Prazo[]        @relation("PrazoConcluidoPor")

  @@map("usuarios")
}

model Edital {
  id                     String                 @id @default(uuid())
  numero                 String                 @unique
  objeto                 String
  modalidade             ModalidadeLicitação  @default(PREGÃO_ELETRÔNICO)
  criterioJulgamento     CritérioJulgamento    @default(MENOR_PRECO)
  status                 String
  dataAbertura           DateTime
  arquivoPdf             String?
  disputas               Disputa[]
  documentosObrigatorios DocumentoObrigatorio[]
  documentos             Documento[]
  lotes                  Lote[]
  mensagensChat          MensagemChat[]
  recursos               Recurso[]
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  Sancao                 Sancao[]
  Prazo                  Prazo[]
}

model Disputa {
  id            String               @id @default(uuid())
  editalId      String
  status        DisputaStatus
  inicio        DateTime?
  fimPrevisto   DateTime?
  encerramento  DateTime?
  tempoRestante Int?
  edital        Edital               @relation(fields: [editalId], references: [id], onDelete: Cascade)
  propostas     Proposta[]
  lances        Lance[]
  documentos    DocumentoLicitante[]
  mensagensChat MensagemChat[]
  logs          LogAtividade[]
  sessoes       Sessao[]
  licitantes    Licitante[]
}

model Licitante {
  id          String      @id @default(uuid())
  razaoSocial String
  cnpj        String      @unique
  tipoEmpresa TipoEmpresa
  usuario     Usuario?

  propostas     Proposta[]
  lances        Lance[]
  documentos    DocumentoLicitante[]
  sessoes       Sessao[]
  mensagensChat MensagemChat[]
  disputas      Disputa[]
  recursos      Recurso[]
  Sancao        Sancao[]
  Prazo         Prazo[]
}

model Proposta {
  id            String         @id @default(uuid())
  disputaId     String
  licitanteId   String
  itemId        String
  valorCentavos Int // valor em centavos
  dataEnvio     DateTime
  arquivo       String?
  status        StatusProposta @default(PENDENTE)
  observacao    String?
  versao        Int            @default(1)
  createdBy     String
  updatedBy     String?
  deletedAt     DateTime?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  disputa   Disputa   @relation(fields: [disputaId], references: [id], onDelete: Cascade)
  licitante Licitante @relation(fields: [licitanteId], references: [id], onDelete: Cascade)
  item      Item      @relation(fields: [itemId], references: [id], onDelete: Cascade)

  @@unique([itemId, licitanteId, versao])
  @@index([disputaId, itemId])
  @@index([licitanteId, status])
}

model Lance {
  id            String   @id @default(uuid())
  disputaId     String
  licitanteId   String
  valorCentavos Int // valor em centavos
  horario       DateTime
  ip            String?
  userAgent     String?

  disputa   Disputa   @relation(fields: [disputaId], references: [id], onDelete: Cascade)
  licitante Licitante @relation(fields: [licitanteId], references: [id], onDelete: Cascade)
}

model Documento {
  id        String        @id @default(uuid())
  nome      String
  tipo      TipoDocumento
  caminho   String
  descricao String?
  ativo     Boolean       @default(true)
  editalId  String
  edital    Edital        @relation(fields: [editalId], references: [id], onDelete: Cascade)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  deletedAt DateTime?

  @@index([editalId])
  @@index([tipo])
  @@index([ativo])
}

model DocumentoObrigatorio {
  id            String        @id @default(uuid())
  editalId      String
  tipoDocumento TipoDocumento
  descricao     String
  prazoValidade Int? // dias de validade
  observacoes   String?
  edital        Edital        @relation(fields: [editalId], references: [id], onDelete: Cascade)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now()) @updatedAt

  @@index([editalId])
  @@index([tipoDocumento])
}

model DocumentoLicitante {
  id               String          @id @default(uuid())
  disputaId        String
  licitanteId      String
  tipoDocumento    TipoDocumento
  nomeOriginal     String
  descricao        String?
  arquivoPath      String
  dataEnvio        DateTime
  versao           Int             @default(1)
  status           StatusDocumento @default(PENDENTE)
  valido           Boolean         @default(true)
  hashDocumento    String?
  assinaturaBase64 String?
  assinadoPor      String?
  observacoes      String?
  dataValidade     DateTime?
  dataValidacao    DateTime?
  validadoPor      String?

  disputa   Disputa   @relation(fields: [disputaId], references: [id], onDelete: Cascade)
  licitante Licitante @relation(fields: [licitanteId], references: [id], onDelete: Cascade)

  @@index([disputaId])
  @@index([licitanteId])
  @@index([tipoDocumento])
  @@index([status])
  @@index([valido])
}

model MensagemChat {
  id        String            @id @default(uuid())
  editalId  String
  autorId   String
  tipoAutor TipoAutorMensagem
  conteudo  String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt

  edital      Edital     @relation(fields: [editalId], references: [id], onDelete: Cascade)
  autor       Usuario    @relation(fields: [autorId], references: [id], onDelete: Cascade)
  Disputa     Disputa?   @relation(fields: [disputaId], references: [id])
  disputaId   String?
  Licitante   Licitante? @relation(fields: [licitanteId], references: [id])
  licitanteId String?

  @@index([editalId, createdAt])
}

model Sessao {
  id          String    @id @default(uuid())
  licitanteId String
  disputaId   String
  inicio      DateTime
  fim         DateTime?
  ip          String
  hash        String

  licitante Licitante @relation(fields: [licitanteId], references: [id])
  disputa   Disputa   @relation(fields: [disputaId], references: [id])
}

model LogAtividade {
  id           String        @id @default(uuid())
  tipo         TipoAtividade @default(SISTEMA_ERRO)
  acao         String
  detalhes     String?
  data         DateTime      @default(now())
  ip           String?
  userAgent    String?
  sessaoId     String?
  hashSessao   String?
  status       String        @default("SUCESSO") // SUCESSO, ERRO, ALERTA
  nivel        String        @default("INFO") // DEBUG, INFO, WARN, ERROR
  modulo       String        @default("NONE") // Nome do módulo que gerou o log
  entidadeId   String? // ID da entidade relacionada (se aplicável)
  entidadeTipo String? // Tipo da entidade relacionada (se aplicável)
  metadata     Json? // Dados adicionais em formato JSON

  // Relacionamentos
  disputa   Disputa? @relation(fields: [disputaId], references: [id])
  disputaId String?
  usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId String?

  // Índices para consultas frequentes
  @@index([tipo])
  @@index([data])
  @@index([usuarioId])
  @@index([disputaId])
  @@index([modulo])
  @@index([status])
  @@index([nivel])
  @@index([entidadeId, entidadeTipo])
}

model Lote {
  id        String   @id @default(uuid())
  numero    String
  descricao String
  editalId  String
  status    String   @default("ATIVO") // ATIVO, CANCELADO
  itens     Item[]
  edital    Edital   @relation(fields: [editalId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([numero, editalId])
  @@index([editalId, status])
}

model Item {
  id            String     @id @default(uuid())
  numero        String
  descricao     String
  quantidade    Int
  unidade       String
  valorEstimado Int? // valor estimado em centavos
  loteId        String
  status        String     @default("ATIVO") // ATIVO, CANCELADO
  lote          Lote       @relation(fields: [loteId], references: [id], onDelete: Cascade)
  propostas     Proposta[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  Prazo         Prazo[]

  @@unique([numero, loteId])
  @@index([loteId, status])
}

model Recurso {
  id            String        @id @default(uuid())
  tipo          TipoRecurso
  status        StatusRecurso @default(PENDENTE)
  motivo        String
  fundamentacao String
  resposta      String?
  dataEnvio     DateTime      @default(now())
  dataResposta  DateTime?
  prazoResposta Int // dias para resposta
  editalId      String
  licitanteId   String
  usuarioId     String // usuário que enviou o recurso
  respondidoPor String? // usuário que respondeu o recurso

  edital               Edital    @relation(fields: [editalId], references: [id], onDelete: Cascade)
  licitante            Licitante @relation(fields: [licitanteId], references: [id], onDelete: Cascade)
  enviadoPor           Usuario   @relation("RecursoEnviadoPor", fields: [usuarioId], references: [id], onDelete: Cascade)
  respondidoPorUsuario Usuario?  @relation("RecursoRespondidoPor", fields: [respondidoPor], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([editalId])
  @@index([licitanteId])
  @@index([usuarioId])
  @@index([status])
  @@index([tipo])
}

model Sancao {
  id            String       @id @default(uuid())
  tipo          TipoSancao
  status        StatusSancao @default(PENDENTE)
  motivo        String
  fundamentacao String
  dataInicio    DateTime
  dataFim       DateTime?
  valorMulta    Int? // valor em centavos
  observacoes   String?
  editalId      String
  licitanteId   String
  aplicadoPor   String // usuário que aplicou a sanção
  revogadoPor   String? // usuário que revogou a sanção

  edital             Edital    @relation(fields: [editalId], references: [id], onDelete: Cascade)
  licitante          Licitante @relation(fields: [licitanteId], references: [id], onDelete: Cascade)
  aplicadoPorUsuario Usuario   @relation("SancaoAplicadaPor", fields: [aplicadoPor], references: [id], onDelete: Cascade)
  revogadoPorUsuario Usuario?  @relation("SancaoRevogadaPor", fields: [revogadoPor], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([editalId])
  @@index([licitanteId])
  @@index([aplicadoPor])
  @@index([status])
  @@index([tipo])
}

model Prazo {
  id            String      @id @default(uuid())
  tipo          TipoPrazo
  status        StatusPrazo @default(PENDENTE)
  descricao     String
  dataInicio    DateTime
  dataFim       DateTime
  dataConclusao DateTime?
  observacoes   String?
  editalId      String
  licitanteId   String?
  itemId        String?
  criadoPor     String
  concluidoPor  String?

  edital              Edital     @relation(fields: [editalId], references: [id], onDelete: Cascade)
  licitante           Licitante? @relation(fields: [licitanteId], references: [id])
  item                Item?      @relation(fields: [itemId], references: [id])
  criadoPorUsuario    Usuario    @relation("PrazoCriadoPor", fields: [criadoPor], references: [id], onDelete: Cascade)
  concluidoPorUsuario Usuario?   @relation("PrazoConcluidoPor", fields: [concluidoPor], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([editalId])
  @@index([licitanteId])
  @@index([itemId])
  @@index([tipo])
  @@index([status])
  @@index([dataFim])
}
